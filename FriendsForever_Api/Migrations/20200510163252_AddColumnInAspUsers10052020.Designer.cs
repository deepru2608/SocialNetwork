// <auto-generated />
using System;
using FriendsForever_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FriendsForever_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200510163252_AddColumnInAspUsers10052020")]
    partial class AddColumnInAspUsers10052020
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FriendsForever_Api.Security.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("[FirstName] + ' ' + [LastName]");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentedTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommentedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommentsMaster");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("CountryMaster");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryCode = "AF",
                            CountryName = "Afghanistan"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryCode = "AX",
                            CountryName = "Aland Islands"
                        },
                        new
                        {
                            CountryId = 3,
                            CountryCode = "AL",
                            CountryName = "Albania"
                        },
                        new
                        {
                            CountryId = 4,
                            CountryCode = "DZ",
                            CountryName = "Algeria"
                        },
                        new
                        {
                            CountryId = 5,
                            CountryCode = "AS",
                            CountryName = "American Samoa"
                        },
                        new
                        {
                            CountryId = 6,
                            CountryCode = "AD",
                            CountryName = "Andorra"
                        },
                        new
                        {
                            CountryId = 7,
                            CountryCode = "AO",
                            CountryName = "Angola"
                        },
                        new
                        {
                            CountryId = 8,
                            CountryCode = "AI",
                            CountryName = "Anguilla"
                        },
                        new
                        {
                            CountryId = 9,
                            CountryCode = "AQ",
                            CountryName = "Antarctica"
                        },
                        new
                        {
                            CountryId = 10,
                            CountryCode = "AG",
                            CountryName = "Antigua and Barbuda"
                        },
                        new
                        {
                            CountryId = 11,
                            CountryCode = "AR",
                            CountryName = "Argentina"
                        },
                        new
                        {
                            CountryId = 12,
                            CountryCode = "AM",
                            CountryName = "Armenia"
                        },
                        new
                        {
                            CountryId = 13,
                            CountryCode = "AW",
                            CountryName = "Aruba"
                        },
                        new
                        {
                            CountryId = 14,
                            CountryCode = "AU",
                            CountryName = "Australia"
                        },
                        new
                        {
                            CountryId = 15,
                            CountryCode = "AT",
                            CountryName = "Austria"
                        },
                        new
                        {
                            CountryId = 16,
                            CountryCode = "AZ",
                            CountryName = "Azerbaijan"
                        },
                        new
                        {
                            CountryId = 17,
                            CountryCode = "BS",
                            CountryName = "Bahamas"
                        },
                        new
                        {
                            CountryId = 18,
                            CountryCode = "BH",
                            CountryName = "Bahrain"
                        },
                        new
                        {
                            CountryId = 19,
                            CountryCode = "BD",
                            CountryName = "Bangladesh"
                        },
                        new
                        {
                            CountryId = 20,
                            CountryCode = "BB",
                            CountryName = "Barbados"
                        },
                        new
                        {
                            CountryId = 21,
                            CountryCode = "BY",
                            CountryName = "Belarus"
                        },
                        new
                        {
                            CountryId = 22,
                            CountryCode = "BE",
                            CountryName = "Belgium"
                        },
                        new
                        {
                            CountryId = 23,
                            CountryCode = "BZ",
                            CountryName = "Belize"
                        },
                        new
                        {
                            CountryId = 24,
                            CountryCode = "BJ",
                            CountryName = "Benin"
                        },
                        new
                        {
                            CountryId = 25,
                            CountryCode = "BM",
                            CountryName = "Bermuda"
                        },
                        new
                        {
                            CountryId = 26,
                            CountryCode = "BT",
                            CountryName = "Bhutan"
                        },
                        new
                        {
                            CountryId = 27,
                            CountryCode = "BO",
                            CountryName = "Bolivia"
                        },
                        new
                        {
                            CountryId = 28,
                            CountryCode = "BQ",
                            CountryName = "Bonaire"
                        },
                        new
                        {
                            CountryId = 29,
                            CountryCode = "BA",
                            CountryName = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            CountryId = 30,
                            CountryCode = "BW",
                            CountryName = "Botswana"
                        },
                        new
                        {
                            CountryId = 31,
                            CountryCode = "BV",
                            CountryName = "Bouvet Island"
                        },
                        new
                        {
                            CountryId = 32,
                            CountryCode = "BR",
                            CountryName = "Brazil"
                        },
                        new
                        {
                            CountryId = 33,
                            CountryCode = "IO",
                            CountryName = "British Indian Ocean Territory"
                        },
                        new
                        {
                            CountryId = 34,
                            CountryCode = "BN",
                            CountryName = "Brunei Darussalam"
                        },
                        new
                        {
                            CountryId = 35,
                            CountryCode = "BG",
                            CountryName = "Bulgaria"
                        },
                        new
                        {
                            CountryId = 36,
                            CountryCode = "BF",
                            CountryName = "Burkina Faso"
                        },
                        new
                        {
                            CountryId = 37,
                            CountryCode = "BI",
                            CountryName = "Burundi"
                        },
                        new
                        {
                            CountryId = 38,
                            CountryCode = "KH",
                            CountryName = "Cambodia"
                        },
                        new
                        {
                            CountryId = 39,
                            CountryCode = "CM",
                            CountryName = "Cameroon"
                        },
                        new
                        {
                            CountryId = 40,
                            CountryCode = "CA",
                            CountryName = "Canada"
                        },
                        new
                        {
                            CountryId = 41,
                            CountryCode = "CV",
                            CountryName = "Cape Verde"
                        },
                        new
                        {
                            CountryId = 42,
                            CountryCode = "KY",
                            CountryName = "Cayman Islands"
                        },
                        new
                        {
                            CountryId = 43,
                            CountryCode = "CF",
                            CountryName = "Central African Republic"
                        },
                        new
                        {
                            CountryId = 44,
                            CountryCode = "TD",
                            CountryName = "Chad"
                        },
                        new
                        {
                            CountryId = 45,
                            CountryCode = "CL",
                            CountryName = "Chile"
                        },
                        new
                        {
                            CountryId = 46,
                            CountryCode = "CN",
                            CountryName = "China"
                        },
                        new
                        {
                            CountryId = 47,
                            CountryCode = "CX",
                            CountryName = "Christmas Island"
                        },
                        new
                        {
                            CountryId = 48,
                            CountryCode = "CC",
                            CountryName = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            CountryId = 49,
                            CountryCode = "CO",
                            CountryName = "Colombia"
                        },
                        new
                        {
                            CountryId = 50,
                            CountryCode = "KM",
                            CountryName = "Comoros"
                        },
                        new
                        {
                            CountryId = 51,
                            CountryCode = "CG",
                            CountryName = "Congo"
                        },
                        new
                        {
                            CountryId = 52,
                            CountryCode = "CD",
                            CountryName = "Congo"
                        },
                        new
                        {
                            CountryId = 53,
                            CountryCode = "CK",
                            CountryName = "Cook Islands"
                        },
                        new
                        {
                            CountryId = 54,
                            CountryCode = "CR",
                            CountryName = "Costa Rica"
                        },
                        new
                        {
                            CountryId = 55,
                            CountryCode = "CI",
                            CountryName = "CÃ´te d'Ivoire"
                        },
                        new
                        {
                            CountryId = 56,
                            CountryCode = "HR",
                            CountryName = "Croatia"
                        },
                        new
                        {
                            CountryId = 57,
                            CountryCode = "CU",
                            CountryName = "Cuba"
                        },
                        new
                        {
                            CountryId = 58,
                            CountryCode = "CW",
                            CountryName = "CuraÃ§ao"
                        },
                        new
                        {
                            CountryId = 59,
                            CountryCode = "CY",
                            CountryName = "Cyprus"
                        },
                        new
                        {
                            CountryId = 60,
                            CountryCode = "CZ",
                            CountryName = "Czech Republic"
                        },
                        new
                        {
                            CountryId = 61,
                            CountryCode = "DK",
                            CountryName = "Denmark"
                        },
                        new
                        {
                            CountryId = 62,
                            CountryCode = "DJ",
                            CountryName = "Djibouti"
                        },
                        new
                        {
                            CountryId = 63,
                            CountryCode = "DM",
                            CountryName = "Dominica"
                        },
                        new
                        {
                            CountryId = 64,
                            CountryCode = "DO",
                            CountryName = "Dominican Republic"
                        },
                        new
                        {
                            CountryId = 65,
                            CountryCode = "EC",
                            CountryName = "Ecuador"
                        },
                        new
                        {
                            CountryId = 66,
                            CountryCode = "EG",
                            CountryName = "Egypt"
                        },
                        new
                        {
                            CountryId = 67,
                            CountryCode = "SV",
                            CountryName = "El Salvador"
                        },
                        new
                        {
                            CountryId = 68,
                            CountryCode = "GQ",
                            CountryName = "Equatorial Guinea"
                        },
                        new
                        {
                            CountryId = 69,
                            CountryCode = "ER",
                            CountryName = "Eritrea"
                        },
                        new
                        {
                            CountryId = 70,
                            CountryCode = "EE",
                            CountryName = "Estonia"
                        },
                        new
                        {
                            CountryId = 71,
                            CountryCode = "ET",
                            CountryName = "Ethiopia"
                        },
                        new
                        {
                            CountryId = 72,
                            CountryCode = "FK",
                            CountryName = "Falkland Islands"
                        },
                        new
                        {
                            CountryId = 73,
                            CountryCode = "FO",
                            CountryName = "Faroe Islands"
                        },
                        new
                        {
                            CountryId = 74,
                            CountryCode = "FJ",
                            CountryName = "Fiji"
                        },
                        new
                        {
                            CountryId = 75,
                            CountryCode = "FI",
                            CountryName = "Finland"
                        },
                        new
                        {
                            CountryId = 76,
                            CountryCode = "FR",
                            CountryName = "France"
                        },
                        new
                        {
                            CountryId = 77,
                            CountryCode = "GF",
                            CountryName = "French Guiana"
                        },
                        new
                        {
                            CountryId = 78,
                            CountryCode = "PF",
                            CountryName = "French Polynesia"
                        },
                        new
                        {
                            CountryId = 79,
                            CountryCode = "TF",
                            CountryName = "French Southern Territories"
                        },
                        new
                        {
                            CountryId = 80,
                            CountryCode = "GA",
                            CountryName = "Gabon"
                        },
                        new
                        {
                            CountryId = 81,
                            CountryCode = "GM",
                            CountryName = "Gambia"
                        },
                        new
                        {
                            CountryId = 82,
                            CountryCode = "GE",
                            CountryName = "Georgia"
                        },
                        new
                        {
                            CountryId = 83,
                            CountryCode = "DE",
                            CountryName = "Germany"
                        },
                        new
                        {
                            CountryId = 84,
                            CountryCode = "GH",
                            CountryName = "Ghana"
                        },
                        new
                        {
                            CountryId = 85,
                            CountryCode = "GI",
                            CountryName = "Gibraltar"
                        },
                        new
                        {
                            CountryId = 86,
                            CountryCode = "GR",
                            CountryName = "Greece"
                        },
                        new
                        {
                            CountryId = 87,
                            CountryCode = "GL",
                            CountryName = "Greenland"
                        },
                        new
                        {
                            CountryId = 88,
                            CountryCode = "GD",
                            CountryName = "Grenada"
                        },
                        new
                        {
                            CountryId = 89,
                            CountryCode = "GP",
                            CountryName = "Guadeloupe"
                        },
                        new
                        {
                            CountryId = 90,
                            CountryCode = "GU",
                            CountryName = "Guam"
                        },
                        new
                        {
                            CountryId = 91,
                            CountryCode = "GT",
                            CountryName = "Guatemala"
                        },
                        new
                        {
                            CountryId = 92,
                            CountryCode = "GG",
                            CountryName = "Guernsey"
                        },
                        new
                        {
                            CountryId = 93,
                            CountryCode = "GN",
                            CountryName = "Guinea"
                        },
                        new
                        {
                            CountryId = 94,
                            CountryCode = "GW",
                            CountryName = "Guinea-Bissau"
                        },
                        new
                        {
                            CountryId = 95,
                            CountryCode = "GY",
                            CountryName = "Guyana"
                        },
                        new
                        {
                            CountryId = 96,
                            CountryCode = "HT",
                            CountryName = "Haiti"
                        },
                        new
                        {
                            CountryId = 97,
                            CountryCode = "HM",
                            CountryName = "Heard and McDonald Islands"
                        },
                        new
                        {
                            CountryId = 98,
                            CountryCode = "VA",
                            CountryName = "Holy See"
                        },
                        new
                        {
                            CountryId = 99,
                            CountryCode = "HN",
                            CountryName = "Honduras"
                        },
                        new
                        {
                            CountryId = 100,
                            CountryCode = "HK",
                            CountryName = "Hong Kong"
                        },
                        new
                        {
                            CountryId = 101,
                            CountryCode = "HU",
                            CountryName = "Hungary"
                        },
                        new
                        {
                            CountryId = 102,
                            CountryCode = "IS",
                            CountryName = "Iceland"
                        },
                        new
                        {
                            CountryId = 103,
                            CountryCode = "IN",
                            CountryName = "India"
                        },
                        new
                        {
                            CountryId = 104,
                            CountryCode = "ID",
                            CountryName = "Indonesia"
                        },
                        new
                        {
                            CountryId = 105,
                            CountryCode = "IR",
                            CountryName = "Iran"
                        },
                        new
                        {
                            CountryId = 106,
                            CountryCode = "IQ",
                            CountryName = "Iraq"
                        },
                        new
                        {
                            CountryId = 107,
                            CountryCode = "IE",
                            CountryName = "Ireland"
                        },
                        new
                        {
                            CountryId = 108,
                            CountryCode = "IM",
                            CountryName = "Isle of Man"
                        },
                        new
                        {
                            CountryId = 109,
                            CountryCode = "IL",
                            CountryName = "Israel"
                        },
                        new
                        {
                            CountryId = 110,
                            CountryCode = "IT",
                            CountryName = "Italy"
                        },
                        new
                        {
                            CountryId = 111,
                            CountryCode = "JM",
                            CountryName = "Jamaica"
                        },
                        new
                        {
                            CountryId = 112,
                            CountryCode = "JP",
                            CountryName = "Japan"
                        },
                        new
                        {
                            CountryId = 113,
                            CountryCode = "JE",
                            CountryName = "Jersey"
                        },
                        new
                        {
                            CountryId = 114,
                            CountryCode = "JO",
                            CountryName = "Jordan"
                        },
                        new
                        {
                            CountryId = 115,
                            CountryCode = "KZ",
                            CountryName = "Kazakhstan"
                        },
                        new
                        {
                            CountryId = 116,
                            CountryCode = "KE",
                            CountryName = "Kenya"
                        },
                        new
                        {
                            CountryId = 117,
                            CountryCode = "KI",
                            CountryName = "Kiribati"
                        },
                        new
                        {
                            CountryId = 118,
                            CountryCode = "KP",
                            CountryName = "Korea"
                        },
                        new
                        {
                            CountryId = 119,
                            CountryCode = "KR",
                            CountryName = "Korea, Republic of"
                        },
                        new
                        {
                            CountryId = 120,
                            CountryCode = "KW",
                            CountryName = "Kuwait"
                        },
                        new
                        {
                            CountryId = 121,
                            CountryCode = "KG",
                            CountryName = "Kyrgyzstan"
                        },
                        new
                        {
                            CountryId = 122,
                            CountryCode = "LA",
                            CountryName = "Lao People's Democratic Republic"
                        },
                        new
                        {
                            CountryId = 123,
                            CountryCode = "LV",
                            CountryName = "Latvia"
                        },
                        new
                        {
                            CountryId = 124,
                            CountryCode = "LB",
                            CountryName = "Lebanon"
                        },
                        new
                        {
                            CountryId = 125,
                            CountryCode = "LS",
                            CountryName = "Lesotho"
                        },
                        new
                        {
                            CountryId = 126,
                            CountryCode = "LR",
                            CountryName = "Liberia"
                        },
                        new
                        {
                            CountryId = 127,
                            CountryCode = "LY",
                            CountryName = "Libya"
                        },
                        new
                        {
                            CountryId = 128,
                            CountryCode = "LI",
                            CountryName = "Liechtenstein"
                        },
                        new
                        {
                            CountryId = 129,
                            CountryCode = "LT",
                            CountryName = "Lithuania"
                        },
                        new
                        {
                            CountryId = 130,
                            CountryCode = "LU",
                            CountryName = "Luxembourg"
                        },
                        new
                        {
                            CountryId = 131,
                            CountryCode = "MO",
                            CountryName = "Macao"
                        },
                        new
                        {
                            CountryId = 132,
                            CountryCode = "MK",
                            CountryName = "Macedonia"
                        },
                        new
                        {
                            CountryId = 133,
                            CountryCode = "MG",
                            CountryName = "Madagascar"
                        },
                        new
                        {
                            CountryId = 134,
                            CountryCode = "MW",
                            CountryName = "Malawi"
                        },
                        new
                        {
                            CountryId = 135,
                            CountryCode = "MY",
                            CountryName = "Malaysia"
                        },
                        new
                        {
                            CountryId = 136,
                            CountryCode = "MV",
                            CountryName = "Maldives"
                        },
                        new
                        {
                            CountryId = 137,
                            CountryCode = "ML",
                            CountryName = "Mali"
                        },
                        new
                        {
                            CountryId = 138,
                            CountryCode = "MT",
                            CountryName = "Malta"
                        },
                        new
                        {
                            CountryId = 139,
                            CountryCode = "MH",
                            CountryName = "Marshall Islands"
                        },
                        new
                        {
                            CountryId = 140,
                            CountryCode = "MQ",
                            CountryName = "Martinique"
                        },
                        new
                        {
                            CountryId = 141,
                            CountryCode = "MR",
                            CountryName = "Mauritania"
                        },
                        new
                        {
                            CountryId = 142,
                            CountryCode = "MU",
                            CountryName = "Mauritius"
                        },
                        new
                        {
                            CountryId = 143,
                            CountryCode = "YT",
                            CountryName = "Mayotte"
                        },
                        new
                        {
                            CountryId = 144,
                            CountryCode = "MX",
                            CountryName = "Mexico"
                        },
                        new
                        {
                            CountryId = 145,
                            CountryCode = "FM",
                            CountryName = "Micronesia"
                        },
                        new
                        {
                            CountryId = 146,
                            CountryCode = "MD",
                            CountryName = "Moldova"
                        },
                        new
                        {
                            CountryId = 147,
                            CountryCode = "MC",
                            CountryName = "Monaco"
                        },
                        new
                        {
                            CountryId = 148,
                            CountryCode = "MN",
                            CountryName = "Mongolia"
                        },
                        new
                        {
                            CountryId = 149,
                            CountryCode = "ME",
                            CountryName = "Montenegro"
                        },
                        new
                        {
                            CountryId = 150,
                            CountryCode = "MS",
                            CountryName = "Montserrat"
                        },
                        new
                        {
                            CountryId = 151,
                            CountryCode = "MA",
                            CountryName = "Morocco"
                        },
                        new
                        {
                            CountryId = 152,
                            CountryCode = "MZ",
                            CountryName = "Mozambique"
                        },
                        new
                        {
                            CountryId = 153,
                            CountryCode = "MM",
                            CountryName = "Myanmar"
                        },
                        new
                        {
                            CountryId = 154,
                            CountryCode = "NA",
                            CountryName = "Namibia"
                        },
                        new
                        {
                            CountryId = 155,
                            CountryCode = "NR",
                            CountryName = "Nauru"
                        },
                        new
                        {
                            CountryId = 156,
                            CountryCode = "NP",
                            CountryName = "Nepal"
                        },
                        new
                        {
                            CountryId = 157,
                            CountryCode = "NL",
                            CountryName = "Netherlands"
                        },
                        new
                        {
                            CountryId = 158,
                            CountryCode = "NC",
                            CountryName = "New Caledonia"
                        },
                        new
                        {
                            CountryId = 159,
                            CountryCode = "NZ",
                            CountryName = "New Zealand"
                        },
                        new
                        {
                            CountryId = 160,
                            CountryCode = "NI",
                            CountryName = "Nicaragua"
                        },
                        new
                        {
                            CountryId = 161,
                            CountryCode = "NE",
                            CountryName = "Niger"
                        },
                        new
                        {
                            CountryId = 162,
                            CountryCode = "NG",
                            CountryName = "Nigeria"
                        },
                        new
                        {
                            CountryId = 163,
                            CountryCode = "NU",
                            CountryName = "Niue"
                        },
                        new
                        {
                            CountryId = 164,
                            CountryCode = "NF",
                            CountryName = "Norfolk Island"
                        },
                        new
                        {
                            CountryId = 165,
                            CountryCode = "MP",
                            CountryName = "Northern Mariana Islands"
                        },
                        new
                        {
                            CountryId = 166,
                            CountryCode = "NO",
                            CountryName = "Norway"
                        },
                        new
                        {
                            CountryId = 167,
                            CountryCode = "OM",
                            CountryName = "Oman"
                        },
                        new
                        {
                            CountryId = 168,
                            CountryCode = "PK",
                            CountryName = "Pakistan"
                        },
                        new
                        {
                            CountryId = 169,
                            CountryCode = "PW",
                            CountryName = "Palau"
                        },
                        new
                        {
                            CountryId = 170,
                            CountryCode = "PS",
                            CountryName = "Palestine"
                        },
                        new
                        {
                            CountryId = 171,
                            CountryCode = "PA",
                            CountryName = "Panama"
                        },
                        new
                        {
                            CountryId = 172,
                            CountryCode = "PG",
                            CountryName = "Papua New Guinea"
                        },
                        new
                        {
                            CountryId = 173,
                            CountryCode = "PY",
                            CountryName = "Paraguay"
                        },
                        new
                        {
                            CountryId = 174,
                            CountryCode = "PE",
                            CountryName = "Peru"
                        },
                        new
                        {
                            CountryId = 175,
                            CountryCode = "PH",
                            CountryName = "Philippines"
                        },
                        new
                        {
                            CountryId = 176,
                            CountryCode = "PN",
                            CountryName = "Pitcairn"
                        },
                        new
                        {
                            CountryId = 177,
                            CountryCode = "PL",
                            CountryName = "Poland"
                        },
                        new
                        {
                            CountryId = 178,
                            CountryCode = "PT",
                            CountryName = "Portugal"
                        },
                        new
                        {
                            CountryId = 179,
                            CountryCode = "PR",
                            CountryName = "Puerto Rico"
                        },
                        new
                        {
                            CountryId = 180,
                            CountryCode = "QA",
                            CountryName = "Qatar"
                        },
                        new
                        {
                            CountryId = 181,
                            CountryCode = "RE",
                            CountryName = "RÃ©union"
                        },
                        new
                        {
                            CountryId = 182,
                            CountryCode = "RO",
                            CountryName = "Romania"
                        },
                        new
                        {
                            CountryId = 183,
                            CountryCode = "RU",
                            CountryName = "Russian Federation"
                        },
                        new
                        {
                            CountryId = 184,
                            CountryCode = "RW",
                            CountryName = "Rwanda"
                        },
                        new
                        {
                            CountryId = 185,
                            CountryCode = "BL",
                            CountryName = "Saint Barthaemy"
                        },
                        new
                        {
                            CountryId = 186,
                            CountryCode = "SH",
                            CountryName = "Saint Helena"
                        },
                        new
                        {
                            CountryId = 187,
                            CountryCode = "KN",
                            CountryName = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            CountryId = 188,
                            CountryCode = "LC",
                            CountryName = "Saint Lucia"
                        },
                        new
                        {
                            CountryId = 189,
                            CountryCode = "MF",
                            CountryName = "Saint Martin"
                        },
                        new
                        {
                            CountryId = 190,
                            CountryCode = "PM",
                            CountryName = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            CountryId = 191,
                            CountryCode = "VC",
                            CountryName = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            CountryId = 192,
                            CountryCode = "WS",
                            CountryName = "Samoa"
                        },
                        new
                        {
                            CountryId = 193,
                            CountryCode = "SM",
                            CountryName = "San Marino"
                        },
                        new
                        {
                            CountryId = 194,
                            CountryCode = "ST",
                            CountryName = "Sao Tome and Principe"
                        },
                        new
                        {
                            CountryId = 195,
                            CountryCode = "SA",
                            CountryName = "Saudi Arabia"
                        },
                        new
                        {
                            CountryId = 196,
                            CountryCode = "SN",
                            CountryName = "Senegal"
                        },
                        new
                        {
                            CountryId = 197,
                            CountryCode = "RS",
                            CountryName = "Serbia"
                        },
                        new
                        {
                            CountryId = 198,
                            CountryCode = "SC",
                            CountryName = "Seychelles"
                        },
                        new
                        {
                            CountryId = 199,
                            CountryCode = "SL",
                            CountryName = "Sierra Leone"
                        },
                        new
                        {
                            CountryId = 200,
                            CountryCode = "SG",
                            CountryName = "Singapore"
                        },
                        new
                        {
                            CountryId = 201,
                            CountryCode = "SX",
                            CountryName = "Sint Maarten"
                        },
                        new
                        {
                            CountryId = 202,
                            CountryCode = "SK",
                            CountryName = "Slovakia"
                        },
                        new
                        {
                            CountryId = 203,
                            CountryCode = "SI",
                            CountryName = "Slovenia"
                        },
                        new
                        {
                            CountryId = 204,
                            CountryCode = "SB",
                            CountryName = "Solomon Islands"
                        },
                        new
                        {
                            CountryId = 205,
                            CountryCode = "SO",
                            CountryName = "Somalia"
                        },
                        new
                        {
                            CountryId = 206,
                            CountryCode = "ZA",
                            CountryName = "South Africa"
                        },
                        new
                        {
                            CountryId = 207,
                            CountryCode = "GS",
                            CountryName = "South Georgia"
                        },
                        new
                        {
                            CountryId = 208,
                            CountryCode = "SS",
                            CountryName = "South Sudan"
                        },
                        new
                        {
                            CountryId = 209,
                            CountryCode = "ES",
                            CountryName = "Spain"
                        },
                        new
                        {
                            CountryId = 210,
                            CountryCode = "LK",
                            CountryName = "Sri Lanka"
                        },
                        new
                        {
                            CountryId = 211,
                            CountryCode = "SD",
                            CountryName = "Sudan"
                        },
                        new
                        {
                            CountryId = 212,
                            CountryCode = "SR",
                            CountryName = "Suriname"
                        },
                        new
                        {
                            CountryId = 213,
                            CountryCode = "SJ",
                            CountryName = "Svalbard and Jan Mayen"
                        },
                        new
                        {
                            CountryId = 214,
                            CountryCode = "SZ",
                            CountryName = "Swaziland"
                        },
                        new
                        {
                            CountryId = 215,
                            CountryCode = "SE",
                            CountryName = "Sweden"
                        },
                        new
                        {
                            CountryId = 216,
                            CountryCode = "CH",
                            CountryName = "Switzerland"
                        },
                        new
                        {
                            CountryId = 217,
                            CountryCode = "SY",
                            CountryName = "Syrian Arab Republic"
                        },
                        new
                        {
                            CountryId = 218,
                            CountryCode = "TW",
                            CountryName = "Taiwan"
                        },
                        new
                        {
                            CountryId = 219,
                            CountryCode = "TJ",
                            CountryName = "Tajikistan"
                        },
                        new
                        {
                            CountryId = 220,
                            CountryCode = "TZ",
                            CountryName = "Tanzania"
                        },
                        new
                        {
                            CountryId = 221,
                            CountryCode = "TH",
                            CountryName = "Thailand"
                        },
                        new
                        {
                            CountryId = 222,
                            CountryCode = "TL",
                            CountryName = "Timor-Leste"
                        },
                        new
                        {
                            CountryId = 223,
                            CountryCode = "TG",
                            CountryName = "Togo"
                        },
                        new
                        {
                            CountryId = 224,
                            CountryCode = "TK",
                            CountryName = "Tokelau"
                        },
                        new
                        {
                            CountryId = 225,
                            CountryCode = "TO",
                            CountryName = "Tonga"
                        },
                        new
                        {
                            CountryId = 226,
                            CountryCode = "TT",
                            CountryName = "Trinidad and Tobago"
                        },
                        new
                        {
                            CountryId = 227,
                            CountryCode = "TN",
                            CountryName = "Tunisia"
                        },
                        new
                        {
                            CountryId = 228,
                            CountryCode = "TR",
                            CountryName = "Turkey"
                        },
                        new
                        {
                            CountryId = 229,
                            CountryCode = "TM",
                            CountryName = "Turkmenistan"
                        },
                        new
                        {
                            CountryId = 230,
                            CountryCode = "TC",
                            CountryName = "Turks and Caicos Islands"
                        },
                        new
                        {
                            CountryId = 231,
                            CountryCode = "TV",
                            CountryName = "Tuvalu"
                        },
                        new
                        {
                            CountryId = 232,
                            CountryCode = "UG",
                            CountryName = "Uganda"
                        },
                        new
                        {
                            CountryId = 233,
                            CountryCode = "UA",
                            CountryName = "Ukraine"
                        },
                        new
                        {
                            CountryId = 234,
                            CountryCode = "AE",
                            CountryName = "United Arab Emirates"
                        },
                        new
                        {
                            CountryId = 235,
                            CountryCode = "GB",
                            CountryName = "United Kingdom"
                        },
                        new
                        {
                            CountryId = 236,
                            CountryCode = "US",
                            CountryName = "United States"
                        },
                        new
                        {
                            CountryId = 237,
                            CountryCode = "UM",
                            CountryName = "Minor Outlying Islands"
                        },
                        new
                        {
                            CountryId = 238,
                            CountryCode = "UY",
                            CountryName = "Uruguay"
                        },
                        new
                        {
                            CountryId = 239,
                            CountryCode = "UZ",
                            CountryName = "Uzbekistan"
                        },
                        new
                        {
                            CountryId = 240,
                            CountryCode = "VU",
                            CountryName = "Vanuatu"
                        },
                        new
                        {
                            CountryId = 241,
                            CountryCode = "VE",
                            CountryName = "Venezuela"
                        },
                        new
                        {
                            CountryId = 242,
                            CountryCode = "VN",
                            CountryName = "Viet Nam"
                        },
                        new
                        {
                            CountryId = 243,
                            CountryCode = "VG",
                            CountryName = "Virgin Islands"
                        },
                        new
                        {
                            CountryId = 244,
                            CountryCode = "WF",
                            CountryName = "Wallis and Futuna"
                        },
                        new
                        {
                            CountryId = 245,
                            CountryCode = "EH",
                            CountryName = "Western Sahara"
                        },
                        new
                        {
                            CountryId = 246,
                            CountryCode = "YE",
                            CountryName = "Yemen"
                        },
                        new
                        {
                            CountryId = 247,
                            CountryCode = "ZM",
                            CountryName = "Zambia"
                        },
                        new
                        {
                            CountryId = 248,
                            CountryCode = "ZW",
                            CountryName = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("FriendsForever_Library.Models.Feedback", b =>
                {
                    b.Property<string>("FeedBackId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeedbackMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QualityStatus")
                        .HasColumnType("int");

                    b.Property<int>("SerialNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeedBackId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.Friends", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime>("Time_Stamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIdRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIdResponse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FriendsMaster");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.Likes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LikeTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("LikeUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LikesMaster");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.LogForLogin", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ip_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusFlag")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogId");

                    b.ToTable("LogTableForLogin");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.Post", b =>
                {
                    b.Property<string>("PostedId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CommentsCount")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LikesCount")
                        .HasColumnType("int");

                    b.Property<string>("PhotoAttached")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedOwnerPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedOwnerUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("PostedId");

                    b.ToTable("PostMaster");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.PostImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostImagesMaster");
                });

            modelBuilder.Entity("FriendsForever_Library.Models.QualityParameterTable", b =>
                {
                    b.Property<int>("ParamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParamMessage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParamId");

                    b.ToTable("QualityParameters");

                    b.HasData(
                        new
                        {
                            ParamId = 1,
                            ParamMessage = "Bad"
                        },
                        new
                        {
                            ParamId = 2,
                            ParamMessage = "Average"
                        },
                        new
                        {
                            ParamId = 3,
                            ParamMessage = "Good"
                        },
                        new
                        {
                            ParamId = 4,
                            ParamMessage = "Best"
                        });
                });

            modelBuilder.Entity("FriendsForever_Library.Models.UserInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Added_Time_Stamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("InterestName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInterestMaster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FriendsForever_Api.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FriendsForever_Api.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FriendsForever_Api.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FriendsForever_Api.Security.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
